<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="DefaultCustomNode.Large" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="DefaultCustomNode.Small" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>