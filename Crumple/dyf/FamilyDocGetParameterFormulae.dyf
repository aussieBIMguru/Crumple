{
  "Uuid": "3eb48848-7b12-4ae6-af54-3ac4e89a443e",
  "IsCustomNode": true,
  "Category": "Crumple.Revit.Query",
  "Description": "Given a family document or list of them, attempts to get parameter formulae in them. Input structures should be in the form of one sub-list per family document, in a list (but the node will try to create this data structure if not, as well as repeat the last list if they are shorter than the family document list).",
  "Name": "Â© FamilyDoc.GetParameterFormulae",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Made by Gavin Crump\r\n# Free for use\r\n# BIM Guru, www.bimguru.com.au\r\n\r\n# Boilerplate text\r\nimport clr\r\n\r\nclr.AddReference(\"RevitServices\")\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager \r\n\r\nclr.AddReference('RevitAPI')\r\nimport Autodesk \r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Get Revit build version\r\nuiapp = DocumentManager.Instance.CurrentUIApplication\r\napp = uiapp.Application\r\n\r\n# Define list/unwrap list functions\r\ndef tolist(input):\r\n    result = input if isinstance(input, list) else [input]\r\n    return result\r\n\r\ndef getParameterFormula(par):\r\n\tif par.IsDeterminedByFormula:\r\n\t\treturn par.Formula\r\n\telse:\r\n\t\treturn \"\"\r\n\r\ndef parameterOrName(par):\r\n\t# If it isn't a string, try to get its definition name\r\n\tif not isinstance(parName, str):\r\n\t\ttry:\r\n\t\t\treturn parName.Definition.Name\r\n\t\texcept:\r\n\t\t\treturn \"\"\r\n\telse:\r\n\t\treturn par\r\n\r\n#Inputdoc\r\ndocs_list = IN[0]\r\nparamName_lists = IN[1]\r\n\r\nparamLists, formulaLists = [],[]\r\n\r\n# For each document...\r\nfor doc, nameList in zip(docs_list, paramName_lists):\r\n\t# Storage lists\r\n\tparamList, formulaList = [],[]\r\n\t# If a family document...\r\n\tif doc.IsFamilyDocument:\r\n\t\t# Get parameters\r\n\t\tfamMan = doc.FamilyManager\r\n\t\tparams = famMan.Parameters\r\n\t\tparNames = [p.Definition.Name for p in params]\r\n\t\t# For each parameter name...\r\n\t\tfor parName in nameList:\r\n\t\t\tparName = parameterOrName(parName)\r\n\t\t\t# If name is in names...\r\n\t\t\tif parName in parNames:\r\n\t\t\t\t# Find it using a zip loop\r\n\t\t\t\tfor p,n in zip(params, parNames):\r\n\t\t\t\t\tif n == parName:\r\n\t\t\t\t\t\tpar = p\r\n\t\t\t\t\t\tbreak\r\n\t\t\t\tparamList.append(par)\r\n\t\t\t\t# Return the formula\r\n\t\t\t\tformulaList.append(getParameterFormula(par))\r\n\t\t\t# Otherwise, no parameter or values\r\n\t\t\telse:\r\n\t\t\t\tparamList.append(None)\r\n\t\t\t\tformulaList.append(None)\r\n\t\t\t\r\n\t# Append the lists\r\n\tparamLists.append(paramList)\r\n\tformulaLists.append(formulaList)\r\n\r\n# Output the lists\r\nOUT = docs_list, paramLists, formulaLists",
      "Engine": "IronPython2",
      "VariableInputPorts": true,
      "Id": "86f10c050f324cd4ae52b3c0d45f1a88",
      "Inputs": [
        {
          "Id": "61aa69e547004e8982868f50d323447c",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e6fc625a35044c3dac01da58beb06010",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2900fea2168b4d9191f18e1566a75f78",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "doc = out[0];\npar = out[1];\nfrm = out[2];",
      "Id": "91576f60c92d46bd8401d167adb6f911",
      "Inputs": [
        {
          "Id": "87b5b2551996458082b856f1cf8ce215",
          "Name": "out",
          "Description": "out",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6929e839b6c84d9b8d066e63da83a601",
          "Name": "",
          "Description": "doc",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "325bd4792ee9468ebb846cd75caca41d",
          "Name": "",
          "Description": "par",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7dd88724bf1046fead01eb8dcdc127ba",
          "Name": "",
          "Description": "frm",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "84785bdc-e909-45b6-974e-a1c23124fb65",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "84c44b3b48b54d36ab4e0f9b601c1df4",
      "Inputs": [
        {
          "Id": "55c92ea7d1f74f6286574fa266efea16",
          "Name": "primary",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2f320a026d8e4fc4aace2a403071ddf8",
          "Name": "listA",
          "Description": "var[]..[]\nDefault value : null",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5bceef77205e42238316ad92f6dd9af4",
          "Name": "listB",
          "Description": "var[]..[]\nDefault value : null",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c095be86739c4452bb74319f6b171aa0",
          "Name": "listC",
          "Description": "var[]..[]\nDefault value : null",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ae4201b09a6b4399bdac1dea985d06cb",
          "Name": "listD",
          "Description": "var[]..[]\nDefault value : null",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ec9f6e348533456e8f001983fc143c18",
          "Name": "listE",
          "Description": "var[]..[]\nDefault value : null",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f0551606deb24f22869433b101b6e0c0",
          "Name": "primary",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c1a8a44bcc9041f29964eaa316542eb6",
          "Name": "listA",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5ab73fc5163b4dc88129dacddfa3aa3e",
          "Name": "listB",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1a8ab043bef246bc91fda85d57131efc",
          "Name": "listC",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e8bda88b8e9b496bb67023fe806e4b6c",
          "Name": "listD",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1f668ec797c243e9bac49f551691db39",
          "Name": "listE",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given a first input, the node will assess how many items it contains (if one, it will make it a list of 1 item). Remaining branches will be forced into a list of lists, where the last branch will be repeated to a longest length as the first list (if one list or item is provided, it will repeat as the list of lists)."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "familyDocs",
        "TypeName": "var",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": "A family document or list\nof family documents.\n\nIf multiple family documents, you should\nprovide a list of list with branches equal\nto the family documents. If you do not the\nnode will apply longest lacing to the last\nlist for each excess family document."
      },
      "Id": "a0b1d0ce19144229950f226c266986c5",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "cdb0fd5672ee4bc29bef9c6814fea60a",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "nameOrParamLists",
        "TypeName": "var",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": "Lists of family parameters or\nparameter names.\n(per family document, ideally)"
      },
      "Id": "cff7c55dac5f4bc2ac6ef49ad54bff9a",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ae77cd22b2e14e1ab99590ebea0de17f",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Output, DynamoCore",
      "NodeType": "OutputNode",
      "ElementResolver": null,
      "Symbol": "// The original family document(s).\r\n\r\nfamilyDocs",
      "Id": "fe182195cc58435790e9564797e4fd13",
      "Inputs": [
        {
          "Id": "3c073224b3754308a4a14e857f209df1",
          "Name": "",
          "Description": "",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "A function output, use with custom nodes"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Output, DynamoCore",
      "NodeType": "OutputNode",
      "ElementResolver": null,
      "Symbol": "/*Lists of parameters\r\n(list per family document).*/\r\n\r\nparamLists",
      "Id": "76b34b40211f4db3bfefca96d9f8da9d",
      "Inputs": [
        {
          "Id": "1580781fd8644709817115dc0679fe6f",
          "Name": "",
          "Description": "",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "A function output, use with custom nodes"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Output, DynamoCore",
      "NodeType": "OutputNode",
      "ElementResolver": null,
      "Symbol": "/*Lists of formulae, if any\r\n(list per family document).*/\r\n\r\nformulaeLists",
      "Id": "2a7c4dcf6c0e42d2bf815937c8a81c02",
      "Inputs": [
        {
          "Id": "5582a2300953412e8649a61cf594d782",
          "Name": "",
          "Description": "",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "A function output, use with custom nodes"
    }
  ],
  "Connectors": [
    {
      "Start": "2900fea2168b4d9191f18e1566a75f78",
      "End": "87b5b2551996458082b856f1cf8ce215",
      "Id": "18a5c2e28c3943e88bad6e99eaf2fe7b"
    },
    {
      "Start": "6929e839b6c84d9b8d066e63da83a601",
      "End": "3c073224b3754308a4a14e857f209df1",
      "Id": "b29b2d0ec0af4d7a84e9543cac1570e3"
    },
    {
      "Start": "325bd4792ee9468ebb846cd75caca41d",
      "End": "1580781fd8644709817115dc0679fe6f",
      "Id": "424ae8b4412e448f84738462d01413b6"
    },
    {
      "Start": "7dd88724bf1046fead01eb8dcdc127ba",
      "End": "5582a2300953412e8649a61cf594d782",
      "Id": "9088fb0f818848afadebd81efef026da"
    },
    {
      "Start": "f0551606deb24f22869433b101b6e0c0",
      "End": "61aa69e547004e8982868f50d323447c",
      "Id": "81ecab3fdaa24d9a840fc1425958e4de"
    },
    {
      "Start": "c1a8a44bcc9041f29964eaa316542eb6",
      "End": "e6fc625a35044c3dac01da58beb06010",
      "Id": "2f1a97f5ed5c481d8f6ae30410c59032"
    },
    {
      "Start": "cdb0fd5672ee4bc29bef9c6814fea60a",
      "End": "55c92ea7d1f74f6286574fa266efea16",
      "Id": "64edf49372994c1ea9dfee3c3a55307f"
    },
    {
      "Start": "ae77cd22b2e14e1ab99590ebea0de17f",
      "End": "2f320a026d8e4fc4aace2a403071ddf8",
      "Id": "d4362d53cb234cbabd1bbe1e79a7ec08"
    }
  ],
  "Dependencies": [
    "84785bdc-e909-45b6-974e-a1c23124fb65"
  ],
  "NodeLibraryDependencies": [
    {
      "Name": "Crumple",
      "Version": "2024.3.1",
      "ReferenceType": "Package",
      "Nodes": [
        "84c44b3b48b54d36ab4e0f9b601c1df4"
      ]
    }
  ],
  "Author": "None provided",
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": false,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.12.1.8246",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "NodeViews": [
      {
        "ShowGeometry": true,
        "Name": "Python Script (get parameters)",
        "Id": "86f10c050f324cd4ae52b3c0d45f1a88",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 607.768724873385,
        "Y": 0.0
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "91576f60c92d46bd8401d167adb6f911",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 990.47580009082594,
        "Y": 4.1836498907648547
      },
      {
        "ShowGeometry": true,
        "Name": "Â© List.GraftByPrimary",
        "Id": "84c44b3b48b54d36ab4e0f9b601c1df4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 250.0,
        "Y": 0.17070469541306466
      },
      {
        "ShowGeometry": true,
        "Name": "Input",
        "Id": "a0b1d0ce19144229950f226c266986c5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -349.16434868895954,
        "Y": -0.017153379438354932
      },
      {
        "ShowGeometry": true,
        "Name": "Input",
        "Id": "cff7c55dac5f4bc2ac6ef49ad54bff9a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -324.86745069000949,
        "Y": 218.31388887308665
      },
      {
        "ShowGeometry": true,
        "Name": "Output",
        "Id": "fe182195cc58435790e9564797e4fd13",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1364.7261499900474,
        "Y": -100.67133858679387
      },
      {
        "ShowGeometry": true,
        "Name": "Output",
        "Id": "76b34b40211f4db3bfefca96d9f8da9d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1363.8999572323835,
        "Y": 17.064748492710692
      },
      {
        "ShowGeometry": true,
        "Name": "Output",
        "Id": "2a7c4dcf6c0e42d2bf815937c8a81c02",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1360.6209818906207,
        "Y": 148.47252304597117
      }
    ],
    "Annotations": [],
    "X": -502.93173153207749,
    "Y": 343.78226849903695,
    "Zoom": 0.89416808331207664
  }
}