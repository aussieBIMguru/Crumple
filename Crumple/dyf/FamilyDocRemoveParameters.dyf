{
  "Uuid": "c63338ab-0574-417c-b72e-783777f84c1c",
  "IsCustomNode": true,
  "Category": "Crumple.Revit.Create",
  "Description": "Given a family document or list of them, attempts to remove parameters in them. Input structures should be in the form of one sub-list per family document, in a list (but the node will try to create this data structure if not, as well as repeat the last list if they are shorter than the family document list).",
  "Name": "Â© FamilyDoc.RemoveParameters",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Made by Gavin Crump\r\n# Free for use\r\n# BIM Guru, www.bimguru.com.au\r\n\r\n# Boilerplate text\r\nimport clr\r\n\r\nclr.AddReference(\"RevitServices\")\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager \r\nfrom RevitServices.Transactions import TransactionManager \r\n\r\nclr.AddReference(\"RevitAPI\")\r\nimport Autodesk \r\nfrom Autodesk.Revit.DB import FamilyManager, Parameter, Definition, Transaction\r\n\r\n# Function to get parameter or by name\r\ndef tryByName(var, params, names):\r\n\tif isinstance(var, str):\r\n\t\tfor p,n in zip(params, names):\r\n\t\t\tif n == var:\r\n\t\t\t\treturn p\r\n\t\treturn None\r\n\telse:\r\n\t\treturn var\r\n\r\n# Function to remove parameter\r\ndef famDoc_removeParameter(famMan, famPar):\r\n\tif famPar == None:\r\n\t\treturn False\r\n\telse:\r\n\t\ttry:\r\n\t\t\tfamMan.RemoveParameter(famPar)\r\n\t\t\treturn True\r\n\t\texcept:\r\n\t\t\treturn False\r\n\r\n# Inputs\r\ndoc_list   = IN[0]\r\nparamLists = IN[1]\r\n\r\nresults, outcomes = [],[]\r\n\r\n# For each document and its parameter lists...\r\nfor doc, paramList in zip(doc_list, paramLists):\r\n\tresult, outcome = [],[]\r\n\ttry:\r\n\t\tfamMan = doc.FamilyManager\r\n\t\tfamTitle = doc.Title\r\n\texcept:\r\n\t\tfamMan = None\r\n\t\tfamTitle = \"N/A\"\r\n\t# Get all parameters and their names\r\n\tfamParams = famMan.Parameters\r\n\tparNames  = [p.Definition.Name for p in famParams]\r\n\t# Try to get parameters from names\r\n\tparsGet = [tryByName(p,famParams,parNames) for p in paramList]\r\n\t# For each parameter...\r\n\tfor p in parsGet:\r\n\t\ttry:\r\n\t\t\tparName = p.Definition.Name\r\n\t\texcept:\r\n\t\t\tparName = \"N/A\"\r\n\t\toutc = \"\"\r\n\t\tif doc == None:\r\n\t\t\toutc = 'ERROR: Document not provided.'\r\n\t\telif p == None:\r\n\t\t\toutc = 'ERROR: Parameter not found.'\r\n\t\tif outc == \"\":\r\n\t\t\t# Try to remove parameter\r\n\t\t\twith Transaction(doc, 'Replace parameters') as t:\r\n\t\t\t\tt.Start()\r\n\t\t\t\tremoved = famDoc_removeParameter(famMan, p)\r\n\t\t\t\tresult.append(removed)\r\n\t\t\t\tif removed:\r\n\t\t\t\t\toutc = 'SUCCESS: {} removed from {}.'.format(parName, famTitle)\r\n\t\t\t\telse:\r\n\t\t\t\t\toutc = 'FAILURE: {} not removed from {}.'.format(parName, famTitle)\r\n\t\t\t\tt.Commit()\r\n\t\toutcome.append(outc)\r\n\t# Append to results\r\n\tresults.append(result)\r\n\toutcomes.append(outcome)\r\n\r\n# Preparing output to Dynamo\r\nOUT = doc_list, results, outcomes",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "552e9cfb4e8f4004a10f4163ac0e2dd5",
      "Inputs": [
        {
          "Id": "7f4cde66a28343208e8da9141a971ca9",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5d5dfe919fdd407796952eb7a725a7dd",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f7df422e672a4d42b8b9b5af20ee03a9",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "84785bdc-e909-45b6-974e-a1c23124fb65",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "a17dd7b4a847467cb78ef50705dbea89",
      "Inputs": [
        {
          "Id": "4d7d0495de3e45519fc1536ac7e1f1d0",
          "Name": "primary",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "03a867e57d654011a689a58d3b2b58e1",
          "Name": "listA",
          "Description": "var[]..[]\nDefault value : null",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "98ba1168d15c4bcc98df171a2727a5c8",
          "Name": "listB",
          "Description": "var[]..[]\nDefault value : null",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "876080945e2041f09f4a2c0a79ab8ac7",
          "Name": "listC",
          "Description": "var[]..[]\nDefault value : null",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "227d6dd90f014937be94e7e65a5f79d6",
          "Name": "listD",
          "Description": "var[]..[]\nDefault value : null",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "65633cd2c0134af180b9b13b77bf1195",
          "Name": "listE",
          "Description": "var[]..[]\nDefault value : null",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0ef0ae93ae584650ba456f739bb63d5e",
          "Name": "primary",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "df95882f67d644ea90ea199f328487e4",
          "Name": "listA",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f6ef1b93ae474e7b9905a3db03ce2f2b",
          "Name": "listB",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ae53330227c74422817c287f62db7a3c",
          "Name": "listC",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cb9c09108b4c45bcbddfb9c27865de2d",
          "Name": "listD",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1fccbfaf7c804698a1415bf915a3cb9d",
          "Name": "listE",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given a first input, the node will assess how many items it contains (if one, it will make it a list of 1 item). Remaining branches will be forced into a list of lists, where the last branch will be repeated to a longest length as the first list (if one list or item is provided, it will repeat as the list of lists)."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "familyDocs",
        "TypeName": "var",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": "A family document or list\nof family documents.\n\nIf multiple family documents, you should\nprovide a list of list with branches equal\nto the family documents. If you do not the\nnode will apply longest lacing to the last\nlist for each excess family document."
      },
      "Id": "7759910e2e844d70bb4f204d8c6e6abc",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "2598a78b4c164809a44bd19c7aceee39",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "nameOrParamLists",
        "TypeName": "var",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": "Lists of family parameters or\nparameter names.\n(per family document, ideally)"
      },
      "Id": "f2b956e2f943420498e20d2a88b0fe9e",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "cbd474d1201749389340c6250ba4789e",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Output, DynamoCore",
      "NodeType": "OutputNode",
      "ElementResolver": null,
      "Symbol": "// The original family document(s).\r\n\r\nfamilyDocs",
      "Id": "9ed614ba5fe04cf989de5fc5f1a49230",
      "Inputs": [
        {
          "Id": "7dfbc4b69818485a87cbf84ea84bf7ab",
          "Name": "",
          "Description": "",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "A function output, use with custom nodes"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "docs = OUT[0];\nrslt = OUT[1];\nouts = OUT[2];",
      "Id": "0b97f76ae63a4891a3338a34695f82b1",
      "Inputs": [
        {
          "Id": "73aba3665c2444ceaf3b9d2c74180cbd",
          "Name": "OUT",
          "Description": "OUT",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "313780c3735b43b7add14bbe18c61f72",
          "Name": "",
          "Description": "docs",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ab6dd9c34a644b16b467a41dcee35ca7",
          "Name": "",
          "Description": "rslt",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d9a4a4f3af984927b6896e3abb00c1de",
          "Name": "",
          "Description": "outs",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Output, DynamoCore",
      "NodeType": "OutputNode",
      "ElementResolver": null,
      "Symbol": "/*Lists of outcomes\r\n(list per family document).\r\n\r\nTrue if success, false if not.*/\r\n\r\nresultLists",
      "Id": "62e5a6dc633044108f03937354f8f270",
      "Inputs": [
        {
          "Id": "ce7727179c484ff2b11480b7917a05e3",
          "Name": "",
          "Description": "",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "A function output, use with custom nodes"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Output, DynamoCore",
      "NodeType": "OutputNode",
      "ElementResolver": null,
      "Symbol": "/*Lists of outcomes\r\n(list per family document).*/\r\n\r\noutcomeLists",
      "Id": "b327d7f20871400a8e94d16cea05e9f3",
      "Inputs": [
        {
          "Id": "7ded5df2c0eb437cbfb6b58f741c549f",
          "Name": "",
          "Description": "",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "A function output, use with custom nodes"
    }
  ],
  "Connectors": [
    {
      "Start": "f7df422e672a4d42b8b9b5af20ee03a9",
      "End": "73aba3665c2444ceaf3b9d2c74180cbd",
      "Id": "a729f835c6bf4eaf9aec5e837cf22982"
    },
    {
      "Start": "0ef0ae93ae584650ba456f739bb63d5e",
      "End": "7f4cde66a28343208e8da9141a971ca9",
      "Id": "6eed03f3b2b744869fc6c35fd92f1335"
    },
    {
      "Start": "df95882f67d644ea90ea199f328487e4",
      "End": "5d5dfe919fdd407796952eb7a725a7dd",
      "Id": "f035553ff244404f8170253c8174c99b"
    },
    {
      "Start": "2598a78b4c164809a44bd19c7aceee39",
      "End": "4d7d0495de3e45519fc1536ac7e1f1d0",
      "Id": "2ee9b1fdc60e4ff693715fb6694d8b7e"
    },
    {
      "Start": "cbd474d1201749389340c6250ba4789e",
      "End": "03a867e57d654011a689a58d3b2b58e1",
      "Id": "9a3fbbaea46e4700af674cbef54e6527"
    },
    {
      "Start": "313780c3735b43b7add14bbe18c61f72",
      "End": "7dfbc4b69818485a87cbf84ea84bf7ab",
      "Id": "2bc91cc5aa3641adad3ad5c2e6ef38d9"
    },
    {
      "Start": "ab6dd9c34a644b16b467a41dcee35ca7",
      "End": "ce7727179c484ff2b11480b7917a05e3",
      "Id": "69aee10af7e641fe9681d420fc7c84be"
    },
    {
      "Start": "d9a4a4f3af984927b6896e3abb00c1de",
      "End": "7ded5df2c0eb437cbfb6b58f741c549f",
      "Id": "f55a44aefe9149c097883622697fff4a"
    }
  ],
  "Dependencies": [
    "84785bdc-e909-45b6-974e-a1c23124fb65"
  ],
  "NodeLibraryDependencies": [
    {
      "Name": "Crumple",
      "Version": "2024.3.1",
      "ReferenceType": "Package",
      "Nodes": [
        "a17dd7b4a847467cb78ef50705dbea89"
      ]
    }
  ],
  "Author": "None provided",
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": false,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.12.1.8246",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "NodeViews": [
      {
        "ShowGeometry": true,
        "Name": "Python Script (remove parameters)",
        "Id": "552e9cfb4e8f4004a10f4163ac0e2dd5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -388.3098126699814,
        "Y": 56.472494134212468
      },
      {
        "ShowGeometry": true,
        "Name": "Â© List.GraftByPrimary",
        "Id": "a17dd7b4a847467cb78ef50705dbea89",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -715.73109648649108,
        "Y": 56.5785569449331
      },
      {
        "ShowGeometry": true,
        "Name": "Input",
        "Id": "7759910e2e844d70bb4f204d8c6e6abc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1346.9082437162228,
        "Y": -40.62048618582088
      },
      {
        "ShowGeometry": true,
        "Name": "Input",
        "Id": "f2b956e2f943420498e20d2a88b0fe9e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1269.2239271055394,
        "Y": 198.78999457371404
      },
      {
        "ShowGeometry": true,
        "Name": "Output",
        "Id": "9ed614ba5fe04cf989de5fc5f1a49230",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 443.523644860493,
        "Y": -44.690359365293347
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "0b97f76ae63a4891a3338a34695f82b1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -4.8457292033210706,
        "Y": 61.910016323635546
      },
      {
        "ShowGeometry": true,
        "Name": "Output",
        "Id": "62e5a6dc633044108f03937354f8f270",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 444.78360301682795,
        "Y": 76.597902698663432
      },
      {
        "ShowGeometry": true,
        "Name": "Output",
        "Id": "b327d7f20871400a8e94d16cea05e9f3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 429.75587708527115,
        "Y": 236.24944845460789
      }
    ],
    "Annotations": [],
    "X": 633.4531320950291,
    "Y": 199.47046755945729,
    "Zoom": 0.85794222258784891
  }
}