{
  "Uuid": "b7f45c27-dfb0-47cd-bcfd-ed5bf965573e",
  "IsCustomNode": true,
  "Category": "Crumple.Application.Create",
  "Description": "Given a list of views and/or sheets as well as various related settings, attempts to print them to PDF. You will need to select and adjust a suitable print driver in order to supress 'save as' dialogues and other potential interruptions the print driver may cause by default. Our suggestion is PDF24, which provides options to prevent dialogues from appearing.",
  "Name": "Â© Revit.PrintToPdf",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Made by Gavin Crump\r\n# Free for use\r\n# BIM Guru, www.bimguru.com.au\r\n\r\n# Boilerplate text\r\nimport clr\r\nimport os\r\n\r\nclr.AddReference(\"RevitServices\")\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager \r\nfrom RevitServices.Transactions import TransactionManager \r\n\r\nclr.AddReference(\"RevitAPI\")\r\nimport Autodesk \r\nfrom Autodesk.Revit.DB import ViewSet, ViewSheetSetting, Transaction, PrintRange\r\n\r\n# Current doc/app/ui\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n\r\n# Define list/unwrap list functions\r\ndef tolist(input):\r\n    result = input if isinstance(input, list) else [input]\r\n    return result\r\n\r\ndef uwlist(input):\r\n    result = input if isinstance(input, list) else [input]\r\n    return UnwrapElement(result)\r\n\r\n# Preparing input from dynamo to revit\r\ndirectoryPath = IN[0]\r\nviewsToPrint  = uwlist(IN[1])\r\nfileNames     = tolist(IN[2])\r\nprintSetting  = UnwrapElement(IN[3])\r\nprinterName   = IN[4]\r\nconfirmPrint  = IN[5]\r\n\r\n# Function: Replace or remove illegal characters for windows\r\nRANGE_SELECT  = PrintRange.Select\r\n\r\n# Make sure printer is valid\r\ntry:\r\n\tprintManager = doc.PrintManager\r\n\tprintManager.SelectNewPrintDriver(printerName)\r\n\tfoundPrinter = True\r\nexcept:\r\n\tfoundPrinter = False\r\n\r\n# Make file paths\r\nfilePaths = []\r\n\r\nfor fn in fileNames:\r\n\tfilePath = '{}\\{}.pdf'.format(directoryPath, fn)\r\n\tfilePaths.append(filePath)\r\n\r\n# Function: Export a sheet to PDF\r\ndef exportSheetPdf(revit_sheet, file_path, print_setting, myDoc = doc):\r\n\tTransactionManager.Instance.EnsureInTransaction(myDoc)\r\n\t# Set print range\r\n\tprint_manager = myDoc.PrintManager\r\n\tprint_manager.PrintRange = RANGE_SELECT\r\n\tprint_manager.Apply()\r\n\t# Define current view set as current\r\n\tviewSet_temp = ViewSet()\r\n\tviewSet_temp.Insert(revit_sheet)\r\n\tviewSheetSet_temp = print_manager.ViewSheetSetting\r\n\tviewSheetSet_temp.CurrentViewSheetSet.Views = viewSet_temp\r\n\t# Save print setting\r\n\tviewSheetSet_temp.SaveAs(\"_Delete me\")\r\n\t# Set printer\r\n\tprint_manager.SelectNewPrintDriver(printerName)\r\n\tprint_manager.Apply()\r\n\t# Check if printer is virtual and set print to file\r\n\tprint_manager.CombinedFile = True\r\n\tprint_manager.Apply()\r\n\tprint_manager.PrintToFile = True\r\n\t# Set destination filepath\r\n\tprint_manager.PrintToFileName = file_path\r\n\tprint_manager.Apply()\r\n\t# Set print setting\r\n\tprint_setup = print_manager.PrintSetup\r\n\tprint_setup.CurrentPrintSetting = print_setting\r\n\tprint_manager.Apply()\r\n\t# Submit to printer\r\n\tprint_manager.SubmitPrint()\r\n\ttry:\r\n\t\toutcome = True\r\n\texcept:\r\n\t\toutcome = False\r\n\t# Delete Current viewSheetSettings to allow new setting to be stored\r\n\tviewSheetSet_temp.Delete()\r\n\tTransactionManager.Instance.TransactionTaskDone()\r\n\treturn outcome\r\n\r\n# If we didn't find printer, cancel\r\nif not foundPrinter:\r\n\tOUT = \"Printer not found.\", []\r\n# If we confirmed print, try to print\r\nelif confirmPrint:\r\n\t# Outcomes\r\n\toutcomes = []\r\n\t# For each sheet...\r\n\tfor v, f in zip(viewsToPrint, filePaths):\r\n\t\tif os.path.exists(f):\r\n\t\t\toutcomes.append(None)\r\n\t\telse:\r\n\t\t\ttry:\r\n\t\t\t\tprinted = exportSheetPdf(v, f, printSetting, doc)\r\n\t\t\t\toutcomes.append(printed)\r\n\t\t\texcept:\r\n\t\t\t\toutcomes.append(None)\r\n\tOUT = outcomes, filePaths\r\n# If we didn't, return message\r\nelse:\r\n\tOUT = \"Set runMe to true.\", []",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "36c8dc087cbf44b0beb99d1f114d256f",
      "Inputs": [
        {
          "Id": "e32cff53f1064a6a9e9829bdd5e4cc19",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "30460dc494a74bada81c51d4b571493d",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e0505f7f46874c2fab2d47e4a7dee36c",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6bac67fa6a6240b98e9a8872a8891067",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b5b5ed8b5de54e119383bca891e14ed5",
          "Name": "IN[4]",
          "Description": "Input #4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d1846b6928a047c586727f3759ddef10",
          "Name": "IN[5]",
          "Description": "Input #5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1dd244d59fb746439a55ea4073833d67",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "directoryPath",
        "TypeName": "string",
        "TypeRank": 0,
        "DefaultValue": null,
        "Description": ""
      },
      "Id": "44050647f4604114ab9427b8fd952e56",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "549365ad52ef435b8d03349998228188",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "viewsAndSheets",
        "TypeName": "var",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": ""
      },
      "Id": "10037792c47d4575b23c13ca65c84354",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e1b3da68403c49348b4faa79acaab495",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "fileNames",
        "TypeName": "var",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": " Not including the extension"
      },
      "Id": "e5f0224cb7b84a4886895923b2453ae6",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "2874c7b13f1e45038e28f357431d725e",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "printSetting",
        "TypeName": "var",
        "TypeRank": 0,
        "DefaultValue": null,
        "Description": ""
      },
      "Id": "9e91bd1323044815b460534b87c3bdbd",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "1847ae83bf6342c981075b3a49a4b34d",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "printerName",
        "TypeName": "string",
        "TypeRank": 0,
        "DefaultValue": null,
        "Description": ""
      },
      "Id": "a9c9f490d78d4c09b98d89f2959f0014",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "52f2cb09f4ad41b4a52c346bbd9d9bd6",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "runMe",
        "TypeName": "bool",
        "TypeRank": 0,
        "DefaultValue": "false",
        "Description": ""
      },
      "Id": "ef4aaa21d8d845b8908a9cafc23583ec",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "65514bc0791946309e7513514a383253",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x[0];\nx[1];",
      "Id": "a1c7f9ae3c7b4710a8c11db87bdf980f",
      "Inputs": [
        {
          "Id": "101ae2fa25524ee5afbcc4bfdad20ed2",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8cacd43cb1c34b128fdf9158e2b02c8c",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6b183dcb33df46259209e398dd7df5eb",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "4f47b9e4-aa60-4c35-899a-dcb09a373c19",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "8788a8b424e5476c97582271e2defd0c",
      "Inputs": [
        {
          "Id": "fbdd5380d99e497d820991a2186e66e5",
          "Name": "checkStrings",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "70939bc3b84c468789ba92b76b43f82e",
          "Name": "replaceChar",
          "Description": " Character to replace illegal characters with\n\nstring\nDefault value : \"\"",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "842f2005f0bc4f929c994e8b4d2a793a",
          "Name": "legalStrings",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f47a862ec5a14b9481dffa0d50e0c657",
          "Name": "wasChanged",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Finds all illegal characters for a windows named element and substitutes them with a replacement."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Output, DynamoCore",
      "NodeType": "OutputNode",
      "ElementResolver": null,
      "Symbol": "filePaths",
      "Id": "b6ee35344214469dab99f24d606da990",
      "Inputs": [
        {
          "Id": "abf98a50068e45fb9296a07e579c03e9",
          "Name": "",
          "Description": "Output Data",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "A function output, use with custom nodes"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Output, DynamoCore",
      "NodeType": "OutputNode",
      "ElementResolver": null,
      "Symbol": "success",
      "Id": "34a9b1ff349b45f8a3de89071040d561",
      "Inputs": [
        {
          "Id": "6f9138b8d6824982ab66004e30dee0ea",
          "Name": "",
          "Description": "Output Data",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "A function output, use with custom nodes"
    }
  ],
  "Connectors": [
    {
      "Start": "1dd244d59fb746439a55ea4073833d67",
      "End": "101ae2fa25524ee5afbcc4bfdad20ed2",
      "Id": "d192dad449e24a52a70e7fa903fd6776",
      "IsHidden": "False"
    },
    {
      "Start": "549365ad52ef435b8d03349998228188",
      "End": "e32cff53f1064a6a9e9829bdd5e4cc19",
      "Id": "a56e3c2e2a6a48828309a1a58bff6adf",
      "IsHidden": "False"
    },
    {
      "Start": "e1b3da68403c49348b4faa79acaab495",
      "End": "30460dc494a74bada81c51d4b571493d",
      "Id": "337485611921462dadd47815b907d77e",
      "IsHidden": "False"
    },
    {
      "Start": "2874c7b13f1e45038e28f357431d725e",
      "End": "fbdd5380d99e497d820991a2186e66e5",
      "Id": "f00d5a888ed7412ca0a2db91c18d1629",
      "IsHidden": "False"
    },
    {
      "Start": "1847ae83bf6342c981075b3a49a4b34d",
      "End": "6bac67fa6a6240b98e9a8872a8891067",
      "Id": "af048a394f7949f1ac91755115def599",
      "IsHidden": "False"
    },
    {
      "Start": "52f2cb09f4ad41b4a52c346bbd9d9bd6",
      "End": "b5b5ed8b5de54e119383bca891e14ed5",
      "Id": "3e53e64b0de64738a0b9e654d6b76dbe",
      "IsHidden": "False"
    },
    {
      "Start": "65514bc0791946309e7513514a383253",
      "End": "d1846b6928a047c586727f3759ddef10",
      "Id": "d026d49bff424c749892e86efab9603f",
      "IsHidden": "False"
    },
    {
      "Start": "8cacd43cb1c34b128fdf9158e2b02c8c",
      "End": "6f9138b8d6824982ab66004e30dee0ea",
      "Id": "f447916628eb41c297582ee860447955",
      "IsHidden": "False"
    },
    {
      "Start": "6b183dcb33df46259209e398dd7df5eb",
      "End": "abf98a50068e45fb9296a07e579c03e9",
      "Id": "c61df469e94c4b3b9f4e2b3ffa9cf8f6",
      "IsHidden": "False"
    },
    {
      "Start": "842f2005f0bc4f929c994e8b4d2a793a",
      "End": "e0505f7f46874c2fab2d47e4a7dee36c",
      "Id": "d35af044fa134e5b91494c8ddb4cb316",
      "IsHidden": "False"
    }
  ],
  "Dependencies": [
    "4f47b9e4-aa60-4c35-899a-dcb09a373c19"
  ],
  "NodeLibraryDependencies": [
    {
      "Name": "Crumple",
      "Version": "2024.4.3",
      "ReferenceType": "Package",
      "Nodes": [
        "8788a8b424e5476c97582271e2defd0c"
      ]
    }
  ],
  "Author": "None provided",
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": false,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.16.2.5624",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "ConnectorPins": [],
    "NodeViews": [
      {
        "Name": "Python Script",
        "ShowGeometry": true,
        "Id": "36c8dc087cbf44b0beb99d1f114d256f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 413.46473611589232,
        "Y": -65.892761845165921
      },
      {
        "Name": "Input",
        "ShowGeometry": true,
        "Id": "44050647f4604114ab9427b8fd952e56",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -197.73916891939757,
        "Y": -356.59936122774457
      },
      {
        "Name": "Input",
        "ShowGeometry": true,
        "Id": "10037792c47d4575b23c13ca65c84354",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -230.04833808242529,
        "Y": -219.4459936465189
      },
      {
        "Name": "Input",
        "ShowGeometry": true,
        "Id": "e5f0224cb7b84a4886895923b2453ae6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -648.8530219201042,
        "Y": -66.190896821746264
      },
      {
        "Name": "Input",
        "ShowGeometry": true,
        "Id": "9e91bd1323044815b460534b87c3bdbd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -175.27635648846581,
        "Y": 130.50759713665127
      },
      {
        "Name": "Input",
        "ShowGeometry": true,
        "Id": "a9c9f490d78d4c09b98d89f2959f0014",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -182.01069473373457,
        "Y": 269.22036177071556
      },
      {
        "Name": "Input",
        "ShowGeometry": true,
        "Id": "ef4aaa21d8d845b8908a9cafc23583ec",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -187.08517864837017,
        "Y": 414.91630108776036
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "a1c7f9ae3c7b4710a8c11db87bdf980f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 628.48177837527919,
        "Y": -62.89094382968733
      },
      {
        "Name": "Â© String.WindowsLegal",
        "ShowGeometry": true,
        "Id": "8788a8b424e5476c97582271e2defd0c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -220.37340166510671,
        "Y": -66.104594722592708
      },
      {
        "Name": "Output",
        "ShowGeometry": true,
        "Id": "b6ee35344214469dab99f24d606da990",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 952.03790054173271,
        "Y": -234.27645090029142
      },
      {
        "Name": "Output",
        "ShowGeometry": true,
        "Id": "34a9b1ff349b45f8a3de89071040d561",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 988.86750011047423,
        "Y": -2.6179135553581716
      }
    ],
    "Annotations": [],
    "X": 221.77095707220712,
    "Y": 362.38993837376125,
    "Zoom": 0.66275978056840557
  }
}