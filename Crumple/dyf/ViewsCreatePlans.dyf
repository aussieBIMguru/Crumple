{
  "Uuid": "d683fc0e-aae1-4bb7-b6cc-5f8bc13740ac",
  "IsCustomNode": true,
  "Category": "Crumple.Revit.Create",
  "Description": "Given an even list of levels and names and a view type, this node will create new plan views for those levels and attempt to rename them if a name is available. You can automate the application of view templates by assigning them to the view types in Revit as well. If you feed in a ceiling plan type, it will make a ceiling plan due to how the ViewPlan API works.",
  "Name": "Â© Views.CreatePlans",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x[0];\nx[1];\nx[2];",
      "Id": "27625ddba3f44968834519e562451b5e",
      "Inputs": [
        {
          "Id": "9b64bfd6e9f645a284969df848a997f2",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4ec78d3145dc4e158e3f34fe1a59a1f3",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5b2dfb8bc5db4ad596a90aa4a1d1d88d",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a7c962b18090416c8a2141b8e98473bf",
          "Name": "",
          "Description": "Value of expression at line 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Made by Gavin Crump\r\n# Free for use\r\n# BIM Guru, www.bimguru.com.au\r\n\r\n# Boilerplate text\r\nimport clr\r\n\r\nclr.AddReference(\"RevitServices\")\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager \r\nfrom RevitServices.Transactions import TransactionManager \r\n\r\nclr.AddReference(\"RevitAPI\")\r\nimport Autodesk \r\nfrom Autodesk.Revit.DB import ViewPlan\r\n\r\n# Current doc/app/ui\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n\r\n# Define list/unwrap list functions\r\ndef tolist(input):\r\n    result = input if isinstance(input, list) else [input]\r\n    return result\r\n\r\ndef uwlist(input):\r\n    result = input if isinstance(input, list) else [input]\r\n    return UnwrapElement(result)\r\n\r\ndef objOrList(input, initial = IN[0]):\r\n\tif isinstance(initial, list):\r\n\t\treturn input\r\n\telse:\r\n\t\treturn input[0]\r\n\r\n# Preparing input from dynamo to revit\r\nlevels = uwlist(IN[0])\r\nnames  = tolist(IN[1])\r\nvtype  = UnwrapElement(IN[2])\r\nvtypeId = vtype.Id\r\n\r\nviews, result, outcome = [],[],[]\r\n\r\n# Do some action in a Transaction\r\nTransactionManager.Instance.EnsureInTransaction(doc)\r\n\r\n# For each level and name...\r\nfor l, n in zip(levels, names):\r\n\t# Make a new plan\r\n\tview = ViewPlan.Create(doc, vtypeId, l.Id)\r\n\t# Try to rename it\r\n\ttry:\r\n\t\tview.Name = n\r\n\t\tviews.append(view)\r\n\t\tresult.append(True)\r\n\t\toutcome.append(\"SUCCESS: View created.\")\r\n\texcept:\r\n\t\tdoc.Delete(view.Id)\r\n\t\tviews.append(None)\r\n\t\tresult.append(False)\r\n\t\toutcome.append(\"ERROR: Name is not unique.\")\r\n\r\nTransactionManager.Instance.TransactionTaskDone()\r\n\r\n# Preparing output to Dynamo\r\nOUT = [objOrList(o) for o in [views, result, outcome]]",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "53e541489a264822a99e95224394db8a",
      "Inputs": [
        {
          "Id": "fd8f4fa75ece44699cd5f608a9186b1e",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9048b600f53642deb5042f9ac144d3c2",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3395e54119d94c9e9dc9547120ca84f0",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "075150ed9914457b988dc6b7ddd4a5ec",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "levels",
        "TypeName": "var",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": ""
      },
      "Id": "930ed942e0034445888f7b00bb960f3d",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "41268a93205444868dd5ebfdb1224415",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Output, DynamoCore",
      "NodeType": "OutputNode",
      "ElementResolver": null,
      "Symbol": "planViews",
      "Id": "2a6e63f1801543c986a6db2eb847a7e9",
      "Inputs": [
        {
          "Id": "d71c89280cc94b14b75bc2a5703801d1",
          "Name": "",
          "Description": "",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "A function output, use with custom nodes"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "names",
        "TypeName": "var",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": ""
      },
      "Id": "dace7987a05a4da18f7ecb0b6da29bd9",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b310179a56ad40d2b23a55eef7a15f94",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "viewType",
        "TypeName": "var",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": ""
      },
      "Id": "099a17f98b81412a80238c697e0798af",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "339471c0d13f44d9abecd0c3641c885d",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Output, DynamoCore",
      "NodeType": "OutputNode",
      "ElementResolver": null,
      "Symbol": "results",
      "Id": "ec39910671f1477e9e6538514042702e",
      "Inputs": [
        {
          "Id": "5cbcc9d008c5400fa0aed3bc7b53a647",
          "Name": "",
          "Description": "",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "A function output, use with custom nodes"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Output, DynamoCore",
      "NodeType": "OutputNode",
      "ElementResolver": null,
      "Symbol": "outcomes",
      "Id": "3780c7bc9c9a4c3cb674a2219a54957d",
      "Inputs": [
        {
          "Id": "3ecfdda2f6b94670a37baddb1806fa43",
          "Name": "",
          "Description": "",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "A function output, use with custom nodes"
    }
  ],
  "Connectors": [
    {
      "Start": "4ec78d3145dc4e158e3f34fe1a59a1f3",
      "End": "d71c89280cc94b14b75bc2a5703801d1",
      "Id": "4351476a934b4429b1dae63529102f2e"
    },
    {
      "Start": "5b2dfb8bc5db4ad596a90aa4a1d1d88d",
      "End": "5cbcc9d008c5400fa0aed3bc7b53a647",
      "Id": "2bc16aa529e2453e921e7c9cbd6b4fdb"
    },
    {
      "Start": "a7c962b18090416c8a2141b8e98473bf",
      "End": "3ecfdda2f6b94670a37baddb1806fa43",
      "Id": "f3bf27d30d064123ae7eaec2a27de815"
    },
    {
      "Start": "075150ed9914457b988dc6b7ddd4a5ec",
      "End": "9b64bfd6e9f645a284969df848a997f2",
      "Id": "193c043bbeb14055a9c7e557726da5b2"
    },
    {
      "Start": "41268a93205444868dd5ebfdb1224415",
      "End": "fd8f4fa75ece44699cd5f608a9186b1e",
      "Id": "7942f182fc01423c9aee63ff6ea5c6d7"
    },
    {
      "Start": "b310179a56ad40d2b23a55eef7a15f94",
      "End": "9048b600f53642deb5042f9ac144d3c2",
      "Id": "cd713a1ce4ca4e709971aca5ba0e2669"
    },
    {
      "Start": "339471c0d13f44d9abecd0c3641c885d",
      "End": "3395e54119d94c9e9dc9547120ca84f0",
      "Id": "bd89c2e5ba9344f8b6c1c529c2da2400"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [],
  "Author": "None provided",
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": false,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.12.1.8246",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "NodeViews": [
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "27625ddba3f44968834519e562451b5e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 447.0,
        "Y": 3.0
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "53e541489a264822a99e95224394db8a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 250.0,
        "Y": 0.0
      },
      {
        "ShowGeometry": true,
        "Name": "Input",
        "Id": "930ed942e0034445888f7b00bb960f3d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -48.612993923650663,
        "Y": -33.119359718262544
      },
      {
        "ShowGeometry": true,
        "Name": "Output",
        "Id": "2a6e63f1801543c986a6db2eb847a7e9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 655.81470607750111,
        "Y": -63.651560376853524
      },
      {
        "ShowGeometry": true,
        "Name": "Input",
        "Id": "dace7987a05a4da18f7ecb0b6da29bd9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -42.132479146933235,
        "Y": 27.640972932554249
      },
      {
        "ShowGeometry": true,
        "Name": "Input",
        "Id": "099a17f98b81412a80238c697e0798af",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -69.236381763785914,
        "Y": 93.872379733280283
      },
      {
        "ShowGeometry": true,
        "Name": "Output",
        "Id": "ec39910671f1477e9e6538514042702e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 657.76629500412787,
        "Y": 15.713250999500872
      },
      {
        "ShowGeometry": true,
        "Name": "Output",
        "Id": "3780c7bc9c9a4c3cb674a2219a54957d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 661.22913696043406,
        "Y": 92.989579356936133
      }
    ],
    "Annotations": [],
    "X": -110.57287672427282,
    "Y": 263.50402324275325,
    "Zoom": 1.2745230375878935
  }
}