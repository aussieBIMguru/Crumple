{
  "Uuid": "ef851bc9-3bf9-40eb-a268-1276f9ea85a9",
  "IsCustomNode": true,
  "Category": "Crumple.Revit.Actions",
  "Description": "Given a view and one polycurve, sets the boundary of that views crop to the curves of that polycurve. Will not accept multiple polycurves or a list of curves.",
  "Name": "Â© Views.SetCropBox",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Made by Gavin Crump\r\n# Free for use\r\n# BIM Guru, www.bimguru.com.au\r\n\r\n# Boilerplate text\r\nimport clr\r\n\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference(\"RevitNodes\")\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\nclr.ImportExtensions(Revit.GeometryConversion)\r\n\r\nclr.AddReference(\"RevitServices\")\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager \r\nfrom RevitServices.Transactions import TransactionManager \r\n\r\nclr.AddReference(\"RevitAPI\")\r\nimport Autodesk \r\nfrom Autodesk.Revit.DB import CurveLoop\r\n\r\n# Current doc/app/ui\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n\r\n# Define list/unwrap list functions\r\ndef tolist(input):\r\n    result = input if isinstance(input, list) else [input]\r\n    return result\r\n\r\ndef uwlist(input):\r\n    result = input if isinstance(input, list) else [input]\r\n    return UnwrapElement(result)\r\n\r\ndef objOrList(input, initial = IN[0]):\r\n\tif isinstance(initial, list):\r\n\t\treturn input\r\n\telse:\r\n\t\treturn input[0]\r\n\r\n# Preparing input from dynamo to revit\r\nviews   = uwlist(IN[0])\r\npcurves = tolist(IN[1])\r\nvisible = IN[2]\r\n\r\nviewout = []\r\n\r\n# Deconstruct curves and set the view crops\r\nfor v,pc in zip(views,pcurves):\r\n\r\n\tregionManager = v.GetCropRegionShapeManager()\r\n\t\r\n\tcurves_pc = PolyCurve.Curves(pc)\r\n\tcurves_rv = [c.ToRevitType() for c in curves_pc]\r\n\t\r\n\tcurveloop = CurveLoop()\r\n\tfor c in curves_rv:\r\n\t\tcurveloop.Append(c)\r\n\r\n\tTransactionManager.Instance.EnsureInTransaction(doc)\r\n\t\r\n\tv.CropBoxVisible = visible\r\n\tif v.CropBoxActive == False:\r\n\t\tv.CropBoxActive  = True\r\n\t\r\n\tregionManager.SetCropShape(curveloop)\r\n\t\r\n\tTransactionManager.Instance.TransactionTaskDone()\r\n\t\r\n\tviewout.append(v)\r\n\r\n# Preparing output to Dynamo\r\nOUT = objOrList(viewout)",
      "Engine": "IronPython2",
      "VariableInputPorts": true,
      "Id": "d2ffccd8ee904905888c570eca97cfb7",
      "Inputs": [
        {
          "Id": "a20fe0431d7340689c9692aecd7e7755",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "365e1558a01743eaa5be9534ef11768b",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1809d985595b42a18b7920c857eb5bed",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "78ede2c826e74600a17b624401e56f94",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "views",
        "TypeName": "var",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": ""
      },
      "Id": "4a743f703cd645bf801868c2e901cec3",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "287e9b86c6de42b9b9776e9c455384b2",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "polyCurves",
        "TypeName": "var",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": ""
      },
      "Id": "0b8364bf9fd74a1e844efe440dd9e4f8",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a258d1d1e1e741b09dc2d706dc6a99c2",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "showCrop",
        "TypeName": "bool",
        "TypeRank": 0,
        "DefaultValue": "false",
        "Description": ""
      },
      "Id": "9e108a171333475b874319e2ee227359",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "5cf57ca91f3949d7a508a705660e0283",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Output, DynamoCore",
      "NodeType": "OutputNode",
      "ElementResolver": null,
      "Symbol": "views",
      "Id": "9fdd25037d7b4f8d93733af6c4224460",
      "Inputs": [
        {
          "Id": "7a59e3aec9db408f850e7229d0ab1aaa",
          "Name": "",
          "Description": "",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "A function output, use with custom nodes"
    }
  ],
  "Connectors": [
    {
      "Start": "78ede2c826e74600a17b624401e56f94",
      "End": "7a59e3aec9db408f850e7229d0ab1aaa",
      "Id": "fe4be0f90fed442894fe3ee1696b2e8d"
    },
    {
      "Start": "287e9b86c6de42b9b9776e9c455384b2",
      "End": "a20fe0431d7340689c9692aecd7e7755",
      "Id": "a23c2824f7514a71886f1cdac4c02392"
    },
    {
      "Start": "a258d1d1e1e741b09dc2d706dc6a99c2",
      "End": "365e1558a01743eaa5be9534ef11768b",
      "Id": "9416c851ca0e4e6898ae6d291b3a903d"
    },
    {
      "Start": "5cf57ca91f3949d7a508a705660e0283",
      "End": "1809d985595b42a18b7920c857eb5bed",
      "Id": "cf5e5d1427704742a4ab055d04eecd3e"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [],
  "Author": "None provided",
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": false,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.12.1.8246",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -45759.7734375,
      "EyeY": 51367.51171875,
      "EyeZ": 72695.359375,
      "LookX": 45759.7734375,
      "LookY": -51367.51171875,
      "LookZ": -72695.359375,
      "UpX": 0.16903457045555115,
      "UpY": 0.94832348823547363,
      "UpZ": -0.26853266358375549
    },
    "NodeViews": [
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "d2ffccd8ee904905888c570eca97cfb7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 236.54940990206285,
        "Y": 2.9890200217637926
      },
      {
        "ShowGeometry": true,
        "Name": "Input",
        "Id": "4a743f703cd645bf801868c2e901cec3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -53.802360391748493,
        "Y": -33.626475244842766
      },
      {
        "ShowGeometry": true,
        "Name": "Input",
        "Id": "0b8364bf9fd74a1e844efe440dd9e4f8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -93.406875680118787,
        "Y": 30.4391991294479
      },
      {
        "ShowGeometry": true,
        "Name": "Input",
        "Id": "9e108a171333475b874319e2ee227359",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -100.87942573452847,
        "Y": 97.4938935255025
      },
      {
        "ShowGeometry": true,
        "Name": "Output",
        "Id": "9fdd25037d7b4f8d93733af6c4224460",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 443.0219599564723,
        "Y": 2.9890200217637926
      }
    ],
    "Annotations": [],
    "X": 178.79975917439538,
    "Y": 263.8317365559036,
    "Zoom": 1.4466774676749781
  }
}