{
  "Uuid": "bdabe344-6ba4-4c5d-b3af-64dedc761b44",
  "IsCustomNode": true,
  "Category": "Crumple.Revit.Actions",
  "Description": "Removes any view templates assigned to the provided views.",
  "Name": "Â© Views.RemoveViewTemplate",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Made by Gavin Crump\n# Free for use\n# BIM Guru, www.bimguru.com.au\n\n# Boilerplate text\nimport clr\n\nclr.AddReference(\"RevitServices\")\nimport RevitServices\nfrom RevitServices.Persistence import DocumentManager \nfrom RevitServices.Transactions import TransactionManager \n\nclr.AddReference(\"RevitAPI\")\nimport Autodesk \nfrom Autodesk.Revit.DB import ElementId\n\n# Current doc/app/ui\ndoc = DocumentManager.Instance.CurrentDBDocument\n\n# Define list/unwrap list functions\ndef uwlist(input):\n    result = input if isinstance(input, list) else [input]\n    return UnwrapElement(result)\n\ndef objOrList(input):\n    if isinstance(input, list) and len(input) == 1:\n        return input[0]\n    else:\n        return input\n\n# Preparing input from dynamo to revit\nviews = uwlist(IN[0])\n\n# Do some action in a Transaction\nremoved = []\n\nTransactionManager.Instance.EnsureInTransaction(doc)\n\nfor v in views:\n    if v.ViewTemplateId == ElementId.InvalidElementId:\n        removed.append(True)\n    else:\n        try:\n            v.ViewTemplateId = ElementId.InvalidElementId\n            removed.append(True)\n        except:\n            removed.append(False)\n\nTransactionManager.Instance.TransactionTaskDone()\n\n# Preparing output to Dynamo\nOUT = objOrList(removed)",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "1a408ae24bb94269baa453657e067136",
      "Inputs": [
        {
          "Id": "73c6ad1c98124288bb81d600e4d18d76",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3a3d87bd0fd5426ca9617d5a59e36eac",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "views",
        "TypeName": "var",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": ""
      },
      "Id": "6ca83bca19824c25a456a07564517e82",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "eed33d3dc93f436498a61ac486d555e0",
          "Name": "",
          "Description": "Input Data",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Output, DynamoCore",
      "NodeType": "OutputNode",
      "ElementResolver": null,
      "Symbol": "success",
      "Id": "55e8f495a81a4bc9ba699dd8e5b31baa",
      "Inputs": [
        {
          "Id": "a0fe234ec5b84838984e8535110618e6",
          "Name": "",
          "Description": "Output Data",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "A function output, use with custom nodes"
    }
  ],
  "Connectors": [
    {
      "Start": "3a3d87bd0fd5426ca9617d5a59e36eac",
      "End": "a0fe234ec5b84838984e8535110618e6",
      "Id": "4ef10082eb904627846756f96e99c089",
      "IsHidden": "False"
    },
    {
      "Start": "eed33d3dc93f436498a61ac486d555e0",
      "End": "73c6ad1c98124288bb81d600e4d18d76",
      "Id": "bcbdb8c7cdb8469babef21d5309749cb",
      "IsHidden": "False"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [],
  "Author": "None provided",
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": false,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.16.2.5624",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "ConnectorPins": [],
    "NodeViews": [
      {
        "Name": "Python Script",
        "ShowGeometry": true,
        "Id": "1a408ae24bb94269baa453657e067136",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 250.0,
        "Y": 0.0
      },
      {
        "Name": "Input",
        "ShowGeometry": true,
        "Id": "6ca83bca19824c25a456a07564517e82",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -44.0,
        "Y": 1.0
      },
      {
        "Name": "Output",
        "ShowGeometry": true,
        "Id": "55e8f495a81a4bc9ba699dd8e5b31baa",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 499.0,
        "Y": 0.0
      }
    ],
    "Annotations": [],
    "X": 245.06210053125005,
    "Y": 251.717158078125,
    "Zoom": 1.545620359375
  }
}