{
  "Uuid": "55645bca-7a42-48ee-b7ee-5452a2f6ced9",
  "IsCustomNode": true,
  "Category": "Crumple.Revit.Create",
  "Description": "Given a list of elements, attempt to delete them and then return true or false depending on whether it could be deleted. This script flattens the list structure before attempting.",
  "Name": "Â© Elements.Delete",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Made by Gavin Crump\r\n# Free for use\r\n# BIM Guru, www.bimguru.com.au\r\n\r\n# Boilerplate text\r\nimport clr\r\n\r\nclr.AddReference(\"RevitServices\")\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\n\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n\r\n# Define list/unwrap list functions\r\ndef uwlist(input):\r\n    result = input if isinstance(input, list) else [input]\r\n    return UnwrapElement(result)\r\n\r\ndef objOrList(input, initial = IN[0]):\r\n\tif isinstance(initial, list):\r\n\t\treturn input\r\n\telse:\r\n\t\treturn input[0]\r\n\r\n#unwrap all elements to use with API\r\nelements = uwlist(IN[0])\r\n\r\n# Check and delete\r\nTransactionManager.Instance.EnsureInTransaction(doc)\r\n\r\nresults = []\r\n\r\nfor e in elements:\r\n\ttry:\r\n\t\tdoc.Delete(e.Id)\r\n\t\tresults.append(True)\r\n\texcept:\r\n\t\tresults.append(False)\r\n\r\nTransactionManager.Instance.TransactionTaskDone()\r\n   \r\n# Result of transaction\r\nOUT = objOrList(results)",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "c10aa140a9a54d44b64236876afbacc0",
      "Inputs": [
        {
          "Id": "9395f69ec7f14b60a9876056ad71decf",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2a30bf3a2b234fb8a4ffa5ff4cae27eb",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "elements",
        "TypeName": "var",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": ""
      },
      "Id": "1143d6a152db4d26b0b983359af2760b",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "55f06e68a0794515a81e69af19706b6d",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Output, DynamoCore",
      "NodeType": "OutputNode",
      "ElementResolver": null,
      "Symbol": "wasDeleted",
      "Id": "c3f000d465ea4d9f948bb0bd3dc689c9",
      "Inputs": [
        {
          "Id": "d700d9367d5c4a0993490629f965afb4",
          "Name": "",
          "Description": "",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "A function output, use with custom nodes"
    }
  ],
  "Connectors": [
    {
      "Start": "2a30bf3a2b234fb8a4ffa5ff4cae27eb",
      "End": "d700d9367d5c4a0993490629f965afb4",
      "Id": "d6dcb3943fd040cb8b2b1abd1a3cf2ec"
    },
    {
      "Start": "55f06e68a0794515a81e69af19706b6d",
      "End": "9395f69ec7f14b60a9876056ad71decf",
      "Id": "e18d69d1474f42d0bc7b015fb3a14c42"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [],
  "Author": "None provided",
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": false,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.12.1.8246",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "NodeViews": [
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "c10aa140a9a54d44b64236876afbacc0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 311.51196638552136,
        "Y": -13.017744956931438
      },
      {
        "ShowGeometry": true,
        "Name": "Input",
        "Id": "1143d6a152db4d26b0b983359af2760b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -6.0,
        "Y": -14.065944322268216
      },
      {
        "ShowGeometry": true,
        "Name": "Output",
        "Id": "c3f000d465ea4d9f948bb0bd3dc689c9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 538.95314993228237,
        "Y": -10.665854436578798
      }
    ],
    "Annotations": [],
    "X": 216.463710371606,
    "Y": 309.16992655030805,
    "Zoom": 1.0637053297229482
  }
}