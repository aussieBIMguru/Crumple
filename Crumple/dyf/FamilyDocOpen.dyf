{
  "Uuid": "46bde950-4617-4547-8719-6b676b7ebbec",
  "IsCustomNode": true,
  "Category": "Crumple.Revit.Actions",
  "Description": "Given a file path to a family, attempts to open that document in the background in Revit if possible. Should not be used for regular models/templates.",
  "Name": "Â© FamilyDoc.Open",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Made by Gavin Crump\r\n# Free for use\r\n# BIM Guru, www.bimguru.com.au\r\n\r\n# Boilerplate text\r\nimport clr\r\n\r\nclr.AddReference(\"RevitServices\")\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager \r\n\r\nuiapp = DocumentManager.Instance.CurrentUIApplication\r\napp   = uiapp.Application\r\n\r\n# Define list/unwrap list functions\r\ndef tolist(input):\r\n    result = input if isinstance(input, list) else [input]\r\n    return result\r\n\r\n# Current doc/app/ui\r\npaths = tolist(IN[0])\r\ndocs, outcomes = [], []\r\n\r\n# Do some action in a Transaction\r\nfor path in paths:\r\n\ttry:\r\n\t\tdoc = app.OpenDocumentFile(path)\r\n\t\tdocs.append(doc)\r\n\t\toutcomes.append(True)\r\n\texcept:\r\n\t\tdocs.append(None)\r\n\t\toutcomes.append(False)\r\n\r\n# Preparing output to Dynamo\r\nOUT = [docs, outcomes]",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "8a07b34b811e4a8ca5e79e8ca8eecc86",
      "Inputs": [
        {
          "Id": "ebfd34c8780248efaf8719a471503f13",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8665c448931f4ba18878604d613d09d2",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "filePaths",
        "TypeName": "var",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": ""
      },
      "Id": "6aa1edd0ab714494a43870bb3cbc6ea2",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d805e66654a34264a48c4b0150faa4ee",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Output, DynamoCore",
      "NodeType": "OutputNode",
      "ElementResolver": null,
      "Symbol": "familyDocs",
      "Id": "568dcad2843c4758a5bd7a54723a5def",
      "Inputs": [
        {
          "Id": "e82d332b748f43b7996073a7fd2bdde5",
          "Name": "",
          "Description": "",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "A function output, use with custom nodes"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x[0];\nx[1];",
      "Id": "3be3c42f6bdd4fe38c75dac99fff1bd9",
      "Inputs": [
        {
          "Id": "7d5fb5de15864458a7b0fd55d3ae230c",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "189262de29574bdbb2cb41d8b9a40b72",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "712c33ec9b134095b1f80a9cb7bfc57e",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Output, DynamoCore",
      "NodeType": "OutputNode",
      "ElementResolver": null,
      "Symbol": "wasOpened",
      "Id": "5050c9c2b90743baab932a3efcea94e1",
      "Inputs": [
        {
          "Id": "691355a574754ef39dea924a4c8c5f0f",
          "Name": "",
          "Description": "",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "A function output, use with custom nodes"
    }
  ],
  "Connectors": [
    {
      "Start": "8665c448931f4ba18878604d613d09d2",
      "End": "7d5fb5de15864458a7b0fd55d3ae230c",
      "Id": "25c2fe75213542ee91d52dbcd9e78401"
    },
    {
      "Start": "d805e66654a34264a48c4b0150faa4ee",
      "End": "ebfd34c8780248efaf8719a471503f13",
      "Id": "8dbf0a7b3cd34ea7b041d0915aff5811"
    },
    {
      "Start": "189262de29574bdbb2cb41d8b9a40b72",
      "End": "e82d332b748f43b7996073a7fd2bdde5",
      "Id": "79608c796a7f46d887c0d0d2782bd0ff"
    },
    {
      "Start": "712c33ec9b134095b1f80a9cb7bfc57e",
      "End": "691355a574754ef39dea924a4c8c5f0f",
      "Id": "e847c412b91e4dbf9351686b9f78f1f9"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [],
  "Author": "None provided",
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": false,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.12.1.8246",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "NodeViews": [
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "8a07b34b811e4a8ca5e79e8ca8eecc86",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 250.0,
        "Y": 0.0
      },
      {
        "ShowGeometry": true,
        "Name": "Input",
        "Id": "6aa1edd0ab714494a43870bb3cbc6ea2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 0.0,
        "Y": 0.0
      },
      {
        "ShowGeometry": true,
        "Name": "Output",
        "Id": "568dcad2843c4758a5bd7a54723a5def",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 653.00061648537951,
        "Y": -50.81334036998463
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "3be3c42f6bdd4fe38c75dac99fff1bd9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 465.04433090319753,
        "Y": 1.527655440716984
      },
      {
        "ShowGeometry": true,
        "Name": "Output",
        "Id": "5050c9c2b90743baab932a3efcea94e1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 655.7255005440951,
        "Y": 49.890200217638025
      }
    ],
    "Annotations": [],
    "X": 123.93192976321512,
    "Y": 338.87807510173434,
    "Zoom": 1.1776910674525329
  }
}