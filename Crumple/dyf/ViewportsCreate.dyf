{
  "Uuid": "9662db30-43b5-48b3-84b3-967e034afa53",
  "IsCustomNode": true,
  "Category": "Crumple.Revit.Create",
  "Description": "Moves views to sheets based on viewport centres. If less points than views/sheets are provided, it will use longest lacing.",
  "Name": "Â© Viewports.Create",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Output, DynamoCore",
      "NodeType": "OutputNode",
      "ElementResolver": null,
      "Symbol": "viewports",
      "Id": "91a53a8133f043c9b35fa2f2bd57fa4b",
      "Inputs": [
        {
          "Id": "94ef0b5456fa4d6e903c6113576aa2f6",
          "Name": "",
          "Description": "",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "A function output, use with custom nodes"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "views",
        "TypeName": "var",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": "View/sheet count should\nbe the same size/structure."
      },
      "Id": "02a899ad83274b0e878fe2ba8bff218e",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "8d78c0ccda774766842f0ee7d75926f0",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "sheets",
        "TypeName": "var",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": "View/sheet count should\nbe the same size/structure."
      },
      "Id": "0b87fa87ff7a4b8bb662fa7e547312b3",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ddf7127088fb496bac3dc8505487a3bb",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "points",
        "TypeName": "var",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": "Points will match or be\nmade to match view count."
      },
      "Id": "9d17d39508834ababe1bbcdc0988467b",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "fd231f70e87c470e80a222a87b7f5988",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Made by Gavin Crump\r\n# Free for use\r\n# BIM Guru, www.bimguru.com.au\r\n\r\n# Boilerplate text\r\nimport clr\r\nfrom System.Collections.Generic import List\r\n\r\nclr.AddReference(\"RevitNodes\")\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\nclr.ImportExtensions(Revit.GeometryConversion)\r\n\r\nclr.AddReference(\"RevitServices\")\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager \r\nfrom RevitServices.Transactions import TransactionManager \r\n\r\nclr.AddReference(\"RevitAPI\")\r\nimport Autodesk \r\nfrom Autodesk.Revit.DB import FilteredElementCollector, BasePoint, TemporaryViewMode, Viewport, ElementId, Element\r\n\r\n# Current doc/app/ui\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\nfirstId = FilteredElementCollector(doc).OfClass(BasePoint).FirstElementId()\r\nVIEWMODE_TEMPHIDE = TemporaryViewMode.TemporaryHideIsolate\r\n\r\n# Function for unwrapping and forcing lists\r\ndef uwlist(input):\r\n\ttolist = input if isinstance(input, list) else [input]\r\n\treturn UnwrapElement(tolist)\r\n\r\ndef tolist(input):\r\n    result = input if isinstance(input, list) else [input]\r\n    return result\r\n\r\ndef listpad(lst,count):\r\n\tpadded = []\r\n\tlength = len(lst)\r\n\tfor i in range(0,count):\r\n\t\tif i < length:\r\n\t\t\tpadded.append(lst[i])\r\n\t\telse:\r\n\t\t\tpadded.append(lst[-1])\r\n\treturn padded\r\n\r\ndef objOrList(input, initial = IN[0]):\r\n\tif isinstance(initial, list):\r\n\t\treturn input\r\n\telse:\r\n\t\treturn input[0]\r\n\r\n# Preparing input from dynamo to revit\r\nviews  = uwlist(IN[0])\r\nsheets = uwlist(IN[1])\r\npoints = listpad(tolist(IN[2]), len(views))\r\nvpType = IN[3]\r\n\r\n# Viewport type Id\r\nif vpType:\r\n\tvpTypeId = UnwrapElement(vpType).Id\r\nelse:\r\n\tvpTypeId = None\r\n\r\n# Function to create viewport\r\ndef viewportCreate(view, sheet, point, typeId = None, myDoc = doc):\r\n\t# Convert point\r\n\tpt_rvt = point.ToXyz()\r\n\t# Isolate the view for the viewport\r\n\tview.IsolateElementTemporary(firstId)\r\n\t# Place the viewport, change its type\r\n\tvp = Viewport.Create(myDoc, sheet.Id, view.Id, pt_rvt)\r\n\tif typeId != None:\r\n\t\t# Cpython3 workaround\r\n\t\tidList = List[ElementId](vp.Id)\r\n\t\tElement.ChangeTypeId(myDoc, idList, typeId)\r\n\t# Reset temporary isolate\r\n\tview.DisableTemporaryViewMode(VIEWMODE_TEMPHIDE)\r\n\t# Return viewport\r\n\treturn vp\r\n\r\n# Do some action in a Transaction\r\nTransactionManager.Instance.EnsureInTransaction(doc)\r\n \r\nviewports, results, outcomes = [],[],[]\r\n\r\nfor v,s,p in zip(views,sheets,points):\r\n\r\n\tisUnplaced = Viewport.CanAddViewToSheet(doc, s.Id, v.Id)\r\n\t\r\n\tif isUnplaced:\r\n\t\ttry:\r\n\t\t\tviewport = viewportCreate(v, s, p, vpTypeId, doc)\r\n\t\t\tviewports.append(viewport)\r\n\t\t\tresults.append(True)\r\n\t\t\toutcomes.append(\"SUCCESS: Viewport placed.\")\r\n\t\texcept:\r\n\t\t\tviewports.append(None)\r\n\t\t\tresults.append(False)\r\n\t\t\toutcomes.append(\"FAILURE: Viewport could not be placed.\")\r\n\telse:\r\n\t\tviewports.append(None)\r\n\t\tresults.append(False)\r\n\t\toutcomes.append(\"ERROR: View is already placed.\")\r\n\r\nTransactionManager.Instance.TransactionTaskDone()\r\n\r\n# Preparing output to Dynamo\r\nOUT = [objOrList(o) for o in [viewports, results, outcomes]]",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "1a2ba4004e97464595a5e9ab64feb901",
      "Inputs": [
        {
          "Id": "8b0a1d3dda254edc8dcd9228e13d896f",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "426f7a51acd04f8a8632b5b0f53df855",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5f17d20eaee34b88b33cf8088ca5c9ec",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "97697eff8fe344b7929b1b941380744e",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ee744ff6a5c24f62a48b13ea0fc9dd6d",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Output, DynamoCore",
      "NodeType": "OutputNode",
      "ElementResolver": null,
      "Symbol": "// A list of true/false outcomes\r\nresults",
      "Id": "a1ce71d4454a4bbb86575e3771a07a42",
      "Inputs": [
        {
          "Id": "d23e5b53ea744263adec69885667d31c",
          "Name": "",
          "Description": "",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "A function output, use with custom nodes"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "vp = lst[0];\nrp = lst[1];\noc = lst[2];",
      "Id": "3e402aeb75d848eb88ead7c86195e17e",
      "Inputs": [
        {
          "Id": "bdbac4f890ff4ad396dda8c3b3ad1958",
          "Name": "lst",
          "Description": "lst",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c2bd7532de314be9a5709469395ce0d1",
          "Name": "",
          "Description": "vp",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7c44a45556c74cb3ada1ad028c8ed079",
          "Name": "",
          "Description": "rp",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f265932cf0af4d71b4a1b322c94ec6c9",
          "Name": "",
          "Description": "oc",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Output, DynamoCore",
      "NodeType": "OutputNode",
      "ElementResolver": null,
      "Symbol": "// Detailed messages of outcomes\r\noutcomes",
      "Id": "91606f94308f440d87c71ffaeb9c3847",
      "Inputs": [
        {
          "Id": "2931255e615f41ed9b568009d35511c1",
          "Name": "",
          "Description": "",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "A function output, use with custom nodes"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "viewportType",
        "TypeName": "var",
        "TypeRank": 0,
        "DefaultValue": "null",
        "Description": "Viewport type to be\nused (optional)."
      },
      "Id": "e0c348cbbbe447e6b77078212527ac1c",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ef1cf6fa939845e1bee4d3922a88c2c6",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    }
  ],
  "Connectors": [
    {
      "Start": "8d78c0ccda774766842f0ee7d75926f0",
      "End": "8b0a1d3dda254edc8dcd9228e13d896f",
      "Id": "a17fd731fda64b17a63922fb85842a9b"
    },
    {
      "Start": "ddf7127088fb496bac3dc8505487a3bb",
      "End": "426f7a51acd04f8a8632b5b0f53df855",
      "Id": "6ec19c5a344647fea1bf11ce16c56a98"
    },
    {
      "Start": "fd231f70e87c470e80a222a87b7f5988",
      "End": "5f17d20eaee34b88b33cf8088ca5c9ec",
      "Id": "804ab80a51414a8790ac673f5b316966"
    },
    {
      "Start": "ee744ff6a5c24f62a48b13ea0fc9dd6d",
      "End": "bdbac4f890ff4ad396dda8c3b3ad1958",
      "Id": "084415ec13c244ef9709ca51c91c451c"
    },
    {
      "Start": "c2bd7532de314be9a5709469395ce0d1",
      "End": "94ef0b5456fa4d6e903c6113576aa2f6",
      "Id": "7fceafd9f3fd4e27919085d08aed0a44"
    },
    {
      "Start": "7c44a45556c74cb3ada1ad028c8ed079",
      "End": "d23e5b53ea744263adec69885667d31c",
      "Id": "48d22cea8ccd4fa4888a73cec85851a1"
    },
    {
      "Start": "f265932cf0af4d71b4a1b322c94ec6c9",
      "End": "2931255e615f41ed9b568009d35511c1",
      "Id": "89b50337186649e699bfeec8f632d117"
    },
    {
      "Start": "ef1cf6fa939845e1bee4d3922a88c2c6",
      "End": "97697eff8fe344b7929b1b941380744e",
      "Id": "8ba579ace0ef41b9bdf8c93568b93c3b"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [],
  "Author": "None provided",
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": false,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.12.1.8246",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "NodeViews": [
      {
        "ShowGeometry": true,
        "Name": "Output",
        "Id": "91a53a8133f043c9b35fa2f2bd57fa4b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1252.9603992960524,
        "Y": 46.346738083619243
      },
      {
        "ShowGeometry": true,
        "Name": "Input",
        "Id": "02a899ad83274b0e878fe2ba8bff218e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 109.69021657114126,
        "Y": 24.114680325333609
      },
      {
        "ShowGeometry": true,
        "Name": "Input",
        "Id": "0b87fa87ff7a4b8bb662fa7e547312b3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 106.84157020525367,
        "Y": 113.94927525888363
      },
      {
        "ShowGeometry": true,
        "Name": "Input",
        "Id": "9d17d39508834ababe1bbcdc0988467b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 113.79400265152105,
        "Y": 213.83035637455203
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "1a2ba4004e97464595a5e9ab64feb901",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 664.17234208601667,
        "Y": 130.95504863670845
      },
      {
        "ShowGeometry": true,
        "Name": "Output",
        "Id": "a1ce71d4454a4bbb86575e3771a07a42",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1248.8328076282271,
        "Y": 147.93126518024556
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "3e402aeb75d848eb88ead7c86195e17e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 833.68930710584618,
        "Y": 135.06413626302736
      },
      {
        "ShowGeometry": true,
        "Name": "Output",
        "Id": "91606f94308f440d87c71ffaeb9c3847",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1247.568864237116,
        "Y": 255.10942680811172
      },
      {
        "ShowGeometry": true,
        "Name": "Input",
        "Id": "e0c348cbbbe447e6b77078212527ac1c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 101.94663852230701,
        "Y": 329.736889956148
      }
    ],
    "Annotations": [],
    "X": -396.44761381642877,
    "Y": 133.09403878979532,
    "Zoom": 1.0120421414445724
  }
}