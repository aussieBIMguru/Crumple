{
  "Uuid": "e99c201f-5790-428a-91ac-96f2d455de0f",
  "IsCustomNode": true,
  "Category": "Crumple.Revit.Query",
  "Description": "Given a document and points, attempts to return rooms at those points. If a link instance is provided, it will instead try to return rooms inclusive of required link transforms. If a phase is not valid for a linked document and one with the same name cannot be found, the last created phase will be used.",
  "Name": "Â© Rooms.AtPoint",
  "ElementResolver": {
    "ResolutionMap": {
      "Point": {
        "Key": "Autodesk.DesignScript.Geometry.Point",
        "Value": "ProtoGeometry.dll"
      }
    }
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Output, DynamoCore",
      "NodeType": "OutputNode",
      "ElementResolver": null,
      "Symbol": "room",
      "Id": "4a2f95080fbe4a758f6d95e3cfdd4fff",
      "Inputs": [
        {
          "Id": "6f08ce49187f433f8890a20bcadc2d87",
          "Name": "",
          "Description": "Output Data",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "A function output, use with custom nodes"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "point",
        "TypeName": "var",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": ""
      },
      "Id": "74f223bbd18c49ecaba54628a7d9f58d",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "cc9c6983b7fe47129025abaae012107b",
          "Name": "",
          "Description": "Input Data",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "4a8a580b-b56f-4e35-a1c0-dacf9b9c62bc",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "ddd52ba8206a4a0d9aeb5492f34417aa",
      "Inputs": [
        {
          "Id": "cb7dec588ae1413883bc9a39608de889",
          "Name": "docOrLink",
          "Description": "var[]..[]\nDefault value : null",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "992ff97ad7ce4273a50dc5a9d12bf8ff",
          "Name": "document",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f3763fa8bb5045869d4d396dda02ff60",
          "Name": "outcome",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "If no input is specified or an invalid one is, returns current document. If a link instance is provided, it returns the linked document. If a document is provided it will pass it through."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "docOrLink",
        "TypeName": "var",
        "TypeRank": -1,
        "DefaultValue": "null",
        "Description": "Uses current if none provided.\nAccepts document or link instance."
      },
      "Id": "26347ee5d5ad4f34b10fa0cda736f125",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "2d53ddcbdf7144088d1f639b0caf9311",
          "Name": "",
          "Description": "Input Data",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "phase",
        "TypeName": "var",
        "TypeRank": -1,
        "DefaultValue": "null",
        "Description": ""
      },
      "Id": "e71d6878a5234d6982e02f6ac759d571",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "4568a3bd554a44c495ca52f508e1acc1",
          "Name": "",
          "Description": "Input Data",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Made by Gavin Crump\n# Free for use\n# BIM Guru, www.bimguru.com.au\n\n# Boilerplate text\nimport clr\n\nclr.AddReference('ProtoGeometry')\nfrom Autodesk.DesignScript.Geometry import *\n\n# Define list/unwrap list functions\ndef tolist(input):\n    result = input if isinstance(input, list) else [input]\n    return result\n\ndef objOrList(input):\n    if isinstance(input, list) and len(input) == 1:\n        return input[0]\n    else:\n        return input\n\n# Current doc/app/ui\npoints = tolist(IN[0])\ndoc = IN[1]\ndocOrLink = UnwrapElement(IN[2])\ntestPhase = UnwrapElement(IN[3])\n\n# Try to get the transform\ntry:\n    transform = docOrLink.GetTotalTransform().Inverse\nexcept:\n    transform = None\n\n# Get all phases and phase names\nphases = [p for p in doc.Phases]\nphaseNames = [p.Name for p in phases]\n\n# If phase is null, get the last phase\nif testPhase is None:\n    mainPhase = phases[-1]\n# If phase name exists in doc phases, get it\nelif testPhase.Name in phaseNames:\n    mainPhase = phases[phaseNames.index(testPhase.Name)]\n# Otherwise, get the last phase\nelse:\n    mainPhase = phases[-1]\n\nphases.insert(0, mainPhase)\n\n# Get rooms\nrooms = []\n\nfor pt in points:\n    testPt = pt.ToXyz()\n    if transform is not None:\n        testPt = transform.OfPoint(testPt)\n    for p in phases:\n        room = doc.GetRoomAtPoint(testPt, p)\n        if room is not None:\n            break\n    rooms.append(room)\n\n# Preparing output to Dynamo\nOUT = objOrList(rooms)",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "08bb61069fbd41c0922b238c7829eb02",
      "Inputs": [
        {
          "Id": "b586fbbb2b02492a82896ebdb01c8a82",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d0f09379cbb14cc19b4f5f0e3a2ceb01",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c151f35308e74b959311e5e8b10e3300",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8c14727dc34b4ee9b8416b175b43078e",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "86169ed06bc14167aead9419994d7693",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    }
  ],
  "Connectors": [
    {
      "Start": "cc9c6983b7fe47129025abaae012107b",
      "End": "b586fbbb2b02492a82896ebdb01c8a82",
      "Id": "3e999057066b49189ccf79852b9eb4dd",
      "IsHidden": "False"
    },
    {
      "Start": "992ff97ad7ce4273a50dc5a9d12bf8ff",
      "End": "d0f09379cbb14cc19b4f5f0e3a2ceb01",
      "Id": "f75397acb3ed47b88929803ead7a3e3e",
      "IsHidden": "False"
    },
    {
      "Start": "2d53ddcbdf7144088d1f639b0caf9311",
      "End": "cb7dec588ae1413883bc9a39608de889",
      "Id": "8e69f58f3fbb4477b48cf47e89e9b43b",
      "IsHidden": "False"
    },
    {
      "Start": "2d53ddcbdf7144088d1f639b0caf9311",
      "End": "c151f35308e74b959311e5e8b10e3300",
      "Id": "3b2170c7094a44bca2db335c46f07403",
      "IsHidden": "False"
    },
    {
      "Start": "4568a3bd554a44c495ca52f508e1acc1",
      "End": "8c14727dc34b4ee9b8416b175b43078e",
      "Id": "6377034638994c00adf4c1b8ae8e7bad",
      "IsHidden": "False"
    },
    {
      "Start": "86169ed06bc14167aead9419994d7693",
      "End": "6f08ce49187f433f8890a20bcadc2d87",
      "Id": "5aec3f415e194744806bda353ea2df07",
      "IsHidden": "False"
    }
  ],
  "Dependencies": [
    "4a8a580b-b56f-4e35-a1c0-dacf9b9c62bc"
  ],
  "NodeLibraryDependencies": [
    {
      "Name": "Crumple",
      "Version": "2026.7.1",
      "ReferenceType": "Package",
      "Nodes": [
        "ddd52ba8206a4a0d9aeb5492f34417aa"
      ]
    }
  ],
  "Author": "None provided",
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": false,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.16.2.5624",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "ConnectorPins": [],
    "NodeViews": [
      {
        "Name": "Output",
        "ShowGeometry": true,
        "Id": "4a2f95080fbe4a758f6d95e3cfdd4fff",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 500.30903844169666,
        "Y": 132.34536603776405
      },
      {
        "Name": "Input",
        "ShowGeometry": true,
        "Id": "74f223bbd18c49ecaba54628a7d9f58d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -203.90301757611076,
        "Y": -68.733081485546677
      },
      {
        "Name": "Â© Revit.GetDocument",
        "ShowGeometry": true,
        "Id": "ddd52ba8206a4a0d9aeb5492f34417aa",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -222.89977464936203,
        "Y": 87.633603037839379
      },
      {
        "Name": "Input",
        "ShowGeometry": true,
        "Id": "26347ee5d5ad4f34b10fa0cda736f125",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -778.80597892304036,
        "Y": 194.8475883902625
      },
      {
        "Name": "Input",
        "ShowGeometry": true,
        "Id": "e71d6878a5234d6982e02f6ac759d571",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -245.34285242298347,
        "Y": 316.40080823370039
      },
      {
        "Name": "Python Script",
        "ShowGeometry": true,
        "Id": "08bb61069fbd41c0922b238c7829eb02",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 221.43807221373436,
        "Y": 129.84800577679147
      }
    ],
    "Annotations": [],
    "X": 416.38076318397782,
    "Y": 176.97316719817132,
    "Zoom": 0.83780161710767154
  }
}